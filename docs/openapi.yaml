openapi: 3.0.3
info:
  title: Intranet API
  description: |
    API documentation for the Intranet application.
    
    This API follows REST principles and provides endpoints for:
    - User authentication and authorization
    - User management
    - Application configuration
    
    Built with hexagonal architecture principles.
  version: 1.0.0
  contact:
    name: Intranet Team
    email: dev@intranet.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080/api/v1
    description: Development server
  - url: https://api.intranet.com/v1
    description: Production server

paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticate user with email and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful authentication
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/logout:
    post:
      tags:
        - Authentication
      summary: User logout
      description: Invalidate user session
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful logout
        '401':
          description: Unauthorized

  /users/{id}:
    get:
      tags:
        - Users
      summary: Get user by ID
      description: Retrieve user information by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized

components:
  schemas:
    User:
      type: object
      required:
        - id
        - name
        - email
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          format: email
          example: "john.doe@intranet.com"
        createdAt:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: "user@intranet.com"
        password:
          type: string
          format: password
          example: "password123"

    LoginResponse:
      type: object
      required:
        - token
        - user
      properties:
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        user:
          $ref: '#/components/schemas/User'

    Error:
      type: object
      required:
        - message
        - code
      properties:
        message:
          type: string
          example: "Invalid credentials"
        code:
          type: string
          example: "AUTH_INVALID_CREDENTIALS"
        details:
          type: object
          additionalProperties: true

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

tags:
  - name: Authentication
    description: User authentication operations
  - name: Users
    description: User management operations